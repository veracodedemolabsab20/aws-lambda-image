# This workflows will initiate a Veracode Static Analysis Pipeline scan, return a results.json and convert to SARIF for upload as a code scanning alert

name: Veracode Static Analysis Pipeline Scan

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job to build and submit a pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as input to the pipeline scan file parameter
  build-and-pipeline-scan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        repository: ''

    - uses: papeloto/action-zip@v1
      with:
        files: /
        recursive: true
        dest: result.zip
          
    - uses: actions/upload-artifact@v1
      with:
        name: my-artifact
        path: result.zip
    
    - uses: actions/download-artifact@v2
      id: download
      with:
        name: 'my-artifact'
        path: files/to/upload
        run: echo ${{steps.download.outputs.download-path}}
      
    - uses: wei/curl@master
      with:
        args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
    - run: unzip -o pipeline-scan-LATEST.zip
    
    - uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - run: java -Dpipeline.debug=true -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file result.zip
      continue-on-error: true
    
    - uses: actions/upload-artifact@v1
      with:
        name: ScanResults
        path: results.json
        
    - name: Convert pipeline scan output to SARIF format 
      id: convert
      uses: veracode/veracode-pipeline-scan-results-to-sarif@master
      with:
        pipeline-results-json: results.json
    - uses: github/codeql-action/upload-sarif@v1
      with:
        # Path to SARIF file relative to the root of the repository
        sarif_file: veracode-results.sarif
